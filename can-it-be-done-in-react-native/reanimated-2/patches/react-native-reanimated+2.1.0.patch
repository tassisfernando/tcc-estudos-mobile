diff --git a/node_modules/react-native-reanimated/lib/createAnimatedComponent.js b/node_modules/react-native-reanimated/lib/createAnimatedComponent.js
index ecfb830..0abd44d 100644
--- a/node_modules/react-native-reanimated/lib/createAnimatedComponent.js
+++ b/node_modules/react-native-reanimated/lib/createAnimatedComponent.js
@@ -57,7 +57,7 @@ function flattenArray(array) {
   return resultArr;
 }
 
-export default function createAnimatedComponent(Component) {
+export default function createAnimatedComponent(Component, options = {}) {
   invariant(
     typeof Component !== 'function' ||
       (Component.prototype && Component.prototype.isReactComponent),
@@ -104,7 +104,7 @@ export default function createAnimatedComponent(Component) {
 
     _attachNativeEvents() {
       const node = this._getEventViewRef();
-      const viewTag = findNodeHandle(node);
+      const viewTag = findNodeHandle(options.setNativeProps ? this : node);
 
       for (const key in this.props) {
         const prop = this.props[key];
@@ -232,8 +232,11 @@ export default function createAnimatedComponent(Component) {
     }
 
     _updateFromNative(props) {
-      // eslint-disable-next-line no-unused-expressions
-      this._component.setNativeProps?.(props);
+      if (options.setNativeProps) {
+        options.setNativeProps(this._component, props);
+      } else {
+        this._component.setNativeProps?.(props);
+      }
     }
 
     _attachPropUpdater() {
diff --git a/node_modules/react-native-reanimated/react-native-reanimated.d.ts b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
index fcff3cc..0a70a15 100644
--- a/node_modules/react-native-reanimated/react-native-reanimated.d.ts
+++ b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
@@ -246,11 +246,16 @@ declare module 'react-native-reanimated' {
     }
     export class Code extends Component<CodeProps> {}
 
+    type Options<P> = {
+      setNativeProps: (ref: any, props: P) => void;
+    }
     export function createAnimatedComponent<P extends object>(
-      component: ComponentClass<P>
+      component: ComponentClass<P>,
+      options: Options<P>
     ): ComponentClass<AnimateProps<P>>;
     export function createAnimatedComponent<P extends object>(
-      component: FunctionComponent<P>
+      component: FunctionComponent<P>,
+      options: Options<P>
     ): FunctionComponent<AnimateProps<P>>;
 
     // classes
diff --git a/node_modules/react-native-reanimated/src/createAnimatedComponent.js b/node_modules/react-native-reanimated/src/createAnimatedComponent.js
index ecfb830..0abd44d 100644
--- a/node_modules/react-native-reanimated/src/createAnimatedComponent.js
+++ b/node_modules/react-native-reanimated/src/createAnimatedComponent.js
@@ -57,7 +57,7 @@ function flattenArray(array) {
   return resultArr;
 }
 
-export default function createAnimatedComponent(Component) {
+export default function createAnimatedComponent(Component, options = {}) {
   invariant(
     typeof Component !== 'function' ||
       (Component.prototype && Component.prototype.isReactComponent),
@@ -104,7 +104,7 @@ export default function createAnimatedComponent(Component) {
 
     _attachNativeEvents() {
       const node = this._getEventViewRef();
-      const viewTag = findNodeHandle(node);
+      const viewTag = findNodeHandle(options.setNativeProps ? this : node);
 
       for (const key in this.props) {
         const prop = this.props[key];
@@ -232,8 +232,11 @@ export default function createAnimatedComponent(Component) {
     }
 
     _updateFromNative(props) {
-      // eslint-disable-next-line no-unused-expressions
-      this._component.setNativeProps?.(props);
+      if (options.setNativeProps) {
+        options.setNativeProps(this._component, props);
+      } else {
+        this._component.setNativeProps?.(props);
+      }
     }
 
     _attachPropUpdater() {
